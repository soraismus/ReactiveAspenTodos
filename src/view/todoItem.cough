{ $button, $checkbox, $label } = require '../vendor/adapters'
classSet                       = require '../vendor/classSet'
{ createFactory }              = require '../vendor/React'
{ div, li }                    = require '../vendor/DOM'
todoItemInputClass             = require './todoItemInputClass'

applyIndex = \index \adapter ->
  adapter index

applyIdAndIndex = (id, index) -> (adapter) ->
  adapter (id, index)

includeIndex = (label, index) ->
  { index, label }

includeIdAndIndex = (label, id, index) ->
  { id, index, label }

indexifyAdapter = ([adapter, label]) -> (index) ->
  adapter (includeIndex (label, index))

indexifyAdapterW/Id = ([adapter, label]) -> (id, index) ->
  adapter (includeIdAndIndex (label, id, index))

# -------------------------------------------------------------------------

TodoItem = (todoProps, index) ->
  { completed, editing, editText, focus, id, title } = todoProps
  className = classSet { completed, editing }

  [_completionToggle, _destroyButton, _todoItemLabel] =
    factories.map (applyIdAndIndex (id, index))

  li
    key       : id
    className : className
    div
      className : 'view'
      _completionToggle
        className : 'toggle'
        checked   : completed
        onChange  : true
      _todoItemLabel
        onDoubleClick : true
        title
      _destroyButton
        className : 'destroy'
        onClick   : true
    todoItemInputFactory ({ editText, autoPostFocus: focus, index, uuid: id })

factories = [
  [$checkbox, 'completion-toggle']
  [$button,   'destroy-button'   ]
  [$label,    'todo-item-label'  ]
].map indexifyAdapterW/Id

todoItemInputFactory = createFactory todoItemInputClass

module.exports = TodoItem
