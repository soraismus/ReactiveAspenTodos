{ Controller, Pando }      = require '../../vendor/reactive-aspen'
{ connect, getDispatcher } = Controller
{ mapping }                = Pando

TERMINUS = 'terminus'

log = \label \event -> console.log (label, event)

logSubscribe = \label ->
  getDispatcher(label).subscribe(log label)

[
  '$toggle-all-clicks'
  'new-todo'
  '$toggle-clicks'
  '$destroy-clicks'
  '$clear-clicks'
  '$active-todos-clicks',
  '$all-todos-clicks'
  '$completed-todos-clicks'
  'todo-in-edit',
  '$todo-label-doubleclicks'
  'terminus'
].forEach logSubscribe

completeAllTodos = \index \appState ->
  { activeTodoCount, mode, todos } = appState
  todo = getTodos(mode, todos)[index]
  { completed } = todo
  appState.activeTodoCount = updateCount (activeTodoCount, completed)
  todo.completed = !completed
  appState

extractIndex = \capsule ->
  capsule.index

updateCount = (nbr, completed) ->
  addend = if completed then -1 else 1
  nbr + addend

updateMode = \newMode \appState ->
  appState.mode = newMode
  appState

# -------------------------------------------------------------------------
# WET.
active = \todo ->
  !todo.completed

completed = \todo ->
  todo.completed

getTodos = (mode, todos) ->
  switch mode
    when 'active'    then todos.filter active
    when 'all'       then todos
    when 'completed' then todos.filter completed
# -------------------------------------------------------------------------

connect '$toggle-clicks' TERMINUS ->
  mapping (\capsule -> completeAllTodos (extractIndex capsule))

connect '$active-todos-clicks' TERMINUS ->
  mapping (-> updateMode 'active')

connect '$all-todos-clicks' TERMINUS ->
  mapping (-> updateMode 'all')

connect '$completed-todos-clicks' TERMINUS ->
  mapping (-> updateMode 'completed')

module.exports = null
